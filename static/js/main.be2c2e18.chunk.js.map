{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundary.jsx","containers/App.jsx","reportWebVitals.js","index.jsx"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAYeA,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,GAAhB,OACX,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,8BAAyBH,EAAzB,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCWKK,EAfE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKAC,EAXG,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,aAAhB,OAChB,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCADI,EANA,SAACC,GAAD,OACb,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCkBIC,E,kDAnBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKX,MAAMK,a,GAhBMQ,aC2CbC,G,wDArCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAO7C,WAAU,IAAD,SACyBZ,KAAKJ,MAA7BlB,EADD,EACCA,OACFmC,GAFC,EACS9B,YACOL,EAAOoC,QAAO,SAACC,GAAD,OAAWA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,mBACzG,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,WAP1B,6C,GAvBYX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,SAMnCX,M","file":"static/js/main.be2c2e18.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => (\n  <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n    <img alt=\"robots\" src={`http://robohash.org/${id}?200x200`} />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => (\n  <div>\n    {\n      robots.map((user, i) => (\n        <Card\n          key={i}\n          id={robots[i].id}\n          name={robots[i].name}\n          email={robots[i].email}\n        />\n      ))\n    }\n  </div>\n);\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => (\n  <div className=\"pa2\">\n    <input\n      className=\"pa3 ba b--green bg-lightest-blue\"\n      type=\"search\"\n      placeholder=\"search robots\"\n      onChange={searchChange}\n    />\n  </div>\n);\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => (\n  <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}>\n    {props.children}\n  </div>\n);\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops. That is not good.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()));\n    return !robots.length ?\n      <h1>Loading</h1> :\n      (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';\n\nReactDOM.render(\n  <App />, document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}